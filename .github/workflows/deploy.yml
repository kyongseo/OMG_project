name: CI/CD Pipeline

on:
  push:
    branches:
      - aws&githubAction  # 브랜치 이름을 'aws&githubAction'으로 설정

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: omg-project
          path: build/libs/OMG_project.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: omg-project

      - name: Copy file via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST_JEON }}
          username: ${{ secrets.EC2_USER_JEON }}
          key: ${{ secrets.EC2_KEY_JEON }}
          port: 22
          source: OMG_project.jar
          target: /home/${{ secrets.EC2_USER_JEON }}/app/

      - name: Run deployment script
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST_JEON }}
          username: ${{ secrets.EC2_USER_JEON }}
          key: ${{ secrets.EC2_KEY_JEON }}
          port: 22
          script: |
            pkill -f 'OMG_project.jar' || true
            nohup java -jar /home/${{ secrets.EC2_USER_JEON }}/app/OMG_project.jar --spring.profiles.active=prod > /home/${{ secrets.EC2_USER_JEON }}/app/log.txt 2>&1 &
